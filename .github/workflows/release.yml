name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.2.0)'
        required: true
        default: 'v1.2.0'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run build:mac
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Build application (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build:win

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-builds
          path: |
            release/**/*.dmg
            release/**/*.zip

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-builds
          path: |
            release/**/*.zip
            release/**/*.exe

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Get version from tag
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: ${{ steps.get_version.outputs.VERSION }} - 图片重命名工具
          body: |
            ## 🎉 图片重命名工具 ${{ steps.get_version.outputs.VERSION }}
            
            ### 📦 下载安装包
            - **Windows 用户**: 下载 `.zip` 文件
            - **Mac 用户**: 下载对应架构的 `.dmg` 文件
              - Intel 芯片: `*_x64.dmg`
              - Apple Silicon (M1/M2): `*_arm64.dmg`
              - 通用版本: `*_universal.dmg`
            
            ### 📋 安装说明
            - **Windows**: 解压 zip 文件后运行 exe 文件
            - **Mac**: 下载 dmg 文件，双击安装后从应用程序文件夹启动
            
            ---
            
            自动构建于 ${{ github.sha }}
          files: |
            macos-builds/**/*
            windows-builds/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
